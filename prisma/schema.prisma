// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(cuid())
  email     String    @unique
  password  String
  name      String?
  role      String    @default("user")
  resetToken String?
  resetTokenExpiry DateTime?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  addresses Address[]
  orders    Order[]
  deliveryNotifications DeliveryNotification[]
}

model Product {
  id          String   @id @default(cuid())
  name        String
  description String
  price       Float
  imageUrl    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  orderItems  OrderItem[]
}

model Order {
  id                   String                @id @default(cuid())
  userId               String
  user                 User                  @relation(fields: [userId], references: [id])
  status               String
  totalAmount          Float
  shippingAddressId    String
  shippingAddress      Address               @relation(fields: [shippingAddressId], references: [id])
  trackingNumber       String?
  createdAt            DateTime              @default(now())
  updatedAt            DateTime              @updatedAt
  items                OrderItem[]
  trackingInfo         TrackingInfo?
  deliveryNotifications DeliveryNotification[]
}

model Address {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  name      String   // 配送先名称（自宅、会社など）
  zipCode   String
  prefecture String
  city      String
  street    String
  building  String?
  phone     String
  isDefault Boolean  @default(false)
  orders    Order[]  // 配送先住所として使用されたオーダー
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model OrderItem {
  id            String   @id @default(cuid())
  orderId       String
  order         Order    @relation(fields: [orderId], references: [id])
  productId     String
  product       Product  @relation(fields: [productId], references: [id])
  productName   String
  quantity      Int
  price         Float
  customization Json?    // カスタマイズ情報（サイズ、色、マーク等）
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model TrackingInfo {
  id                   String    @id @default(cuid())
  orderId              String    @unique
  order                Order     @relation(fields: [orderId], references: [id])
  carrier              String    // 配送業者
  trackingNumber       String    // 追跡番号
  status               String    // 配送状況
  currentLocation      String?   // 現在の場所
  history              Json      // 配送履歴
  estimatedDeliveryDate String?  // 配送予定日
  createdAt            DateTime  @default(now())
  updatedAt            DateTime  @updatedAt
}

model DeliveryNotification {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  orderId   String
  order     Order    @relation(fields: [orderId], references: [id])
  type      String
  message   String
  read      Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
