"use strict";(()=>{var t={};t.id=451,t.ids=[451],t.modules={3524:t=>{t.exports=require("@prisma/client")},145:t=>{t.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},6249:(t,e)=>{Object.defineProperty(e,"l",{enumerable:!0,get:function(){return function t(e,r){return r in e?e[r]:"then"in e&&"function"==typeof e.then?e.then(e=>t(e,r)):"function"==typeof e&&"default"===r?e:void 0}}})},5038:(t,e,r)=>{r.r(e),r.d(e,{config:()=>A,default:()=>P,routeModule:()=>D});var a={};r.r(a),r.d(a,{k:()=>u});var n={};r.r(n),r.d(n,{default:()=>y});var o=r(1802),i=r(7153),s=r(6249),l=r(3524);let d=require("winston");var c=r.n(d);let u=c().createLogger({level:process.env.LOG_LEVEL||"info",format:c().format.combine(c().format.timestamp(),c().format.json()),transports:[new(c()).transports.Console({format:c().format.combine(c().format.colorize(),c().format.simple())})]});async function f(t,e,r,a){try{if(!(await fetch("/api/mail/send-delivery-update",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({email:t,orderId:e,status:r,estimatedDeliveryDate:a})})).ok)throw Error("メール送信に失敗しました");return!0}catch(t){return console.error("メール送信エラー:",t),!1}}require("nodemailer");class h{constructor(t,e="https://api.yamato.co.jp/v1"){this.apiKey=t,this.baseUrl=e}async getTrackingInfo(t){try{a.default.info(`Requesting tracking info for Yamato tracking number: ${t}`);let e=["配送中","配達完了","集荷完了","配送遅延"],r=["東京都中央区","大阪府大阪市","愛知県名古屋市","福岡県福岡市"],n=e[Math.floor(Math.random()*e.length)],o=r[Math.floor(Math.random()*r.length)],i=new Date,s=new Date(i.getTime()+6048e5*Math.random());return{trackingNumber:t,status:n,currentLocation:o,description:`荷物は${o}にあります。${n}です。`,timestamp:i.toISOString(),estimatedDelivery:s.toISOString(),carrier:"yamato",additionalInfo:{deliveryTimeWindow:"14:00-16:00",packageSize:"60サイズ",weight:`${Math.floor(10*Math.random())+1}kg`,deliveryType:"通常配送"}}}catch(t){throw a.default.error("Error fetching Yamato tracking info:",t),Error("ヤマトの配送情報の取得に失敗しました")}}}class g{constructor(t,e="https://api.sagawa.co.jp/v1"){this.apiKey=t,this.baseUrl=e}async getTrackingInfo(t){try{a.default.info(`Requesting tracking info for Sagawa tracking number: ${t}`);let e=["配送中","配達完了","集荷完了","配送遅延"],r=["東京都中央区","大阪府大阪市","愛知県名古屋市","福岡県福岡市"],n=e[Math.floor(Math.random()*e.length)],o=r[Math.floor(Math.random()*r.length)],i=new Date,s=new Date(i.getTime()+6048e5*Math.random());return{trackingNumber:t,status:n,currentLocation:o,description:`荷物は${o}にあります。${n}です。`,timestamp:i.toISOString(),estimatedDelivery:s.toISOString(),carrier:"sagawa",additionalInfo:{weight:`${Math.floor(10*Math.random())+1}kg`,deliveryType:"通常配送",senderName:"佐川運輸株式会社"}}}catch(t){throw a.default.error("Error fetching Sagawa tracking info:",t),Error("佐川の配送情報の取得に失敗しました")}}}class m{constructor(t,e="https://api.post.japanpost.jp/v1"){this.apiKey=t,this.baseUrl=e}async getTrackingInfo(t){try{let e;if(a.default.info(`Getting Japan Post tracking info: ${t}`),!/^\d{11,13}$/.test(t))throw Error("Invalid Japan Post tracking number format");let r=["集荷完了","配送中","配達中","配達完了","保管中","返送中"],n=["東京中央郵便局","大阪中央郵便局","横浜中央郵便局","名古屋中央郵便局","福岡中央郵便局","札幌中央郵便局","仙台中央郵便局"],o=new Date,i=Math.floor(Math.random()*r.length),s=r[i],l=n[Math.floor(Math.random()*n.length)];if("配達完了"===s){let t=new Date;t.setHours(t.getHours()-Math.floor(8*Math.random())),e=t.toISOString()}else{let t=new Date;t.setDate(t.getDate()+Math.floor(3*Math.random())+1),e=t.toISOString()}return{trackingNumber:t,status:s,currentLocation:l,description:`荷物は${l}にあります。${s}です。`,timestamp:o.toISOString(),estimatedDelivery:e,carrier:"japanpost",additionalInfo:{deliveryTimeWindow:"14:00-16:00",packageSize:"60サイズ",deliveryType:"ゆうパック",senderName:"日本郵便株式会社"}}}catch(t){throw a.default.error(`Error getting Japan Post tracking information: ${t instanceof Error?t.message:"Unknown error"}`),Error(`日本郵便の配送情報の取得に失敗しました: ${t instanceof Error?t.message:"Unknown error"}`)}}}class p{constructor(t,e="https://api.dhl.com/v1"){this.apiKey=t,this.baseUrl=e}async getTrackingInfo(t){try{let e;if(u.info(`DHLの配送情報を取得中: ${t}`),!/^\d{10,12}$/.test(t))throw Error("無効なDHL追跡番号フォーマットです");let r=["集荷完了","通関手続き中","国際輸送中","配送中","配達完了","保管中"],a=["ライプツィヒハブ","成田国際空港","羽田空港","関西国際空港","中部国際空港","福岡国際空港"],n=new Date,o=r[Math.floor(Math.random()*r.length)],i=a[Math.floor(Math.random()*a.length)];if("配達完了"===o){let t=new Date;t.setHours(t.getHours()-Math.floor(8*Math.random())),e=t.toISOString()}else{let t=new Date;t.setDate(t.getDate()+Math.floor(5*Math.random())+1),e=t.toISOString()}return{trackingNumber:t,status:o,currentLocation:i,description:`荷物は${i}にあります。${o}です。`,timestamp:n.toISOString(),estimatedDelivery:e,carrier:"dhl",additionalInfo:{deliveryTimeWindow:"09:00-18:00",packageSize:"国際小包",deliveryType:"DHL Express Worldwide",senderName:"DHL International GmbH"}}}catch(t){throw u.error(`DHLの配送情報取得エラー: ${t instanceof Error?t.message:"不明なエラー"}`),Error(`DHLの配送情報の取得に失敗しました: ${t instanceof Error?t.message:"不明なエラー"}`)}}}class I{constructor(){this.apiKey=process.env.UPS_API_KEY||"",this.baseUrl="https://api.ups.com/api/tracking/v1"}async getTrackingInfo(t){try{a.default.info(`UPS配送の追跡情報を取得: ${t}`);let e=new Date,r=new Date;r.setDate(e.getDate()+Math.floor(3*Math.random())+1);let n=["PICKUP COMPLETED","IN TRANSIT","OUT FOR DELIVERY","DELIVERED","EXCEPTION","ARRIVAL SCAN"],o=n[Math.floor(Math.random()*n.length)],i=["TOKYO SORT FACILITY","OSAKA HUB","NARITA GATEWAY","KANSAI DISTRIBUTION CENTER","YOKOHAMA FACILITY"],s=i[Math.floor(Math.random()*i.length)];return{trackingNumber:t,status:o,currentLocation:s,description:({"PICKUP COMPLETED":"集荷が完了しました","IN TRANSIT":"輸送中です","OUT FOR DELIVERY":"配達中です",DELIVERED:"お届け完了しました",EXCEPTION:"配達に問題が発生しました","ARRIVAL SCAN":"配送施設に到着しました"})[o]||`お荷物は${s}で${o}です`,timestamp:e.toISOString(),estimatedDelivery:r.toISOString().split("T")[0],carrier:"UPS",additionalInfo:{serviceType:["UPS Ground","UPS Express","UPS Worldwide Express","UPS Next Day Air"][Math.floor(4*Math.random())],packageWeight:`${(10*Math.random()+.5).toFixed(1)} kg`,signatureRequired:Math.random()>.5}}}catch(t){throw a.default.error(`UPS API呼び出しエラー: ${t}`),Error(`配送状況の取得に失敗しました: ${t}`)}}}class w{constructor(t,e="https://api.fedex.com/v1"){this.apiKey=t,this.baseUrl=e}async getTrackingInfo(t){try{let e;if(a.default.info(`FedExの配送情報を取得中: ${t}`),!/^\d{12,14}$/.test(t))throw Error("無効なFedEx追跡番号フォーマットです");let r=["集荷完了","通関手続き中","国際輸送中","配送中","配達完了","保管中"],n=["メンフィス国際ハブ","成田国際空港","羽田空港","関西国際空港","中部国際空港","福岡国際空港"],o=new Date,i=r[Math.floor(Math.random()*r.length)],s=n[Math.floor(Math.random()*n.length)];if("配達完了"===i){let t=new Date;t.setHours(t.getHours()-Math.floor(8*Math.random())),e=t.toISOString()}else{let t=new Date;t.setDate(t.getDate()+Math.floor(5*Math.random())+1),e=t.toISOString()}return{trackingNumber:t,status:i,currentLocation:s,description:`荷物は${s}にあります。${i}です。`,timestamp:o.toISOString(),estimatedDelivery:e,carrier:"fedex",additionalInfo:{deliveryTimeWindow:"12:00-17:00",packageSize:"国際小包",deliveryType:"FedEx International Priority",senderName:"FedEx Corporation"}}}catch(t){throw a.default.error(`FedExの配送情報取得エラー: ${t instanceof Error?t.message:"不明なエラー"}`),Error(`FedExの配送情報の取得に失敗しました: ${t instanceof Error?t.message:"不明なエラー"}`)}}}let E=new l.PrismaClient;async function y(t,e){if("POST"!==t.method)return e.status(405).json({message:"Method Not Allowed"});if(t.headers["x-api-key"]!==process.env.TRACKING_API_KEY)return e.status(401).json({message:"Unauthorized"});try{let t=await E.order.findMany({where:{status:{in:["confirmed","shipped"]},trackingNumber:{not:null}},include:{trackingInfo:!0}});a.default.info(`配送状況更新対象: ${t.length}件の注文`);let r={success:0,notUpdated:0,failed:0};for(let e of t)try{if(!e.trackingNumber)continue;let t=await S(e.trackingInfo?.carrier||"配送業者",e.trackingNumber);if(!t){r.notUpdated++;continue}await M(e.id,t),r.success++}catch(t){a.default.error(`注文 ${e.id} の配送状況更新に失敗: ${t}`),r.failed++}return e.status(200).json({message:"配送状況の更新が完了しました",results:r})}catch(t){return a.default.error("配送状況更新処理でエラーが発生しました:",t),e.status(500).json({message:"Internal Server Error"})}}async function S(t,e){try{let r;a.default.info(`配送状況の取得開始: ${t} - ${e}`);let n=t.toLowerCase();if(n.includes("yamato")||n.includes("ヤマト")){let t=new h(process.env.YAMATO_API_KEY||"");r=await t.getTrackingInfo(e)}else if(n.includes("sagawa")||n.includes("佐川")){let t=new g(process.env.SAGAWA_API_KEY||"");r=await t.getTrackingInfo(e)}else if(n.includes("japanpost")||n.includes("郵便")){let t=new m(process.env.JAPAN_POST_API_KEY||"");r=await t.getTrackingInfo(e)}else if(n.includes("dhl")){let t=new p(process.env.DHL_API_KEY||"");r=await t.getTrackingInfo(e)}else if(n.includes("ups")){let t=new I(process.env.UPS_API_KEY||"");r=await t.getTrackingInfo(e)}else if(n.includes("fedex")){let t=new w(process.env.FEDEX_API_KEY||"");r=await t.getTrackingInfo(e)}else{if(a.default.warn(`未対応の配送業者: ${t}`),Math.random()>.8)return null;let e=["配送準備中","集荷完了","配送中","配送所到着","配達中","配達完了"],n=["東京配送センター","大阪配送センター","名古屋配送センター","福岡配送センター","札幌配送センター"],o=e[Math.floor(Math.random()*e.length)],i=n[Math.floor(Math.random()*n.length)],s=`${i}で${o}になりました`,l=new Date;l.setDate(l.getDate()+Math.floor(5*Math.random())+1),r={status:o,currentLocation:i,description:s,estimatedDelivery:l.toISOString().split("T")[0]}}if(!r)return null;return a.default.info(`配送状況の取得成功: ${r.status}`),{status:r.status,currentLocation:r.currentLocation||"",description:r.description||`${r.status}`,estimatedDelivery:r.estimatedDelivery||null}}catch(t){return a.default.error(`配送状況の取得に失敗しました: ${t}`),null}}async function M(t,e){try{let r=new Date().toISOString();await E.trackingInfo.update({where:{orderId:t},data:{status:e.status,currentLocation:e.currentLocation,estimatedDeliveryDate:e.estimatedDelivery,history:{push:{timestamp:r,status:e.status,location:e.currentLocation,description:e.description}},updatedAt:r}}),"配達完了"===e.status&&await E.order.update({where:{id:t},data:{status:"delivered"}}),a.default.info(`注文 ${t} の配送状況を更新しました: ${e.status}`);let n=await E.order.findUnique({where:{id:t},include:{deliveryNotifications:{include:{user:!0}}}});return n&&n.deliveryNotifications.length>0&&await Promise.all(n.deliveryNotifications.map(t=>f(t.user.email,n.id,e.status,e.estimatedDelivery))),!0}catch(t){throw a.default.error(`配送情報の更新に失敗しました: ${t}`),t}}let P=(0,s.l)(n,"default"),A=(0,s.l)(n,"config"),D=new o.PagesAPIRouteModule({definition:{kind:i.x.PAGES_API,page:"/api/cron/update-tracking",pathname:"/api/cron/update-tracking",bundlePath:"",filename:""},userland:n})},7153:(t,e)=>{var r;Object.defineProperty(e,"x",{enumerable:!0,get:function(){return r}}),function(t){t.PAGES="PAGES",t.PAGES_API="PAGES_API",t.APP_PAGE="APP_PAGE",t.APP_ROUTE="APP_ROUTE"}(r||(r={}))},1802:(t,e,r)=>{t.exports=r(145)}};var e=require("../../../webpack-api-runtime.js");e.C(t);var r=e(e.s=5038);module.exports=r})();