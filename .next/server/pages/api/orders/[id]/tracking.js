"use strict";(()=>{var e={};e.id=718,e.ids=[718],e.modules={3524:e=>{e.exports=require("@prisma/client")},1649:e=>{e.exports=require("next-auth/react")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},6249:(e,r)=>{Object.defineProperty(r,"l",{enumerable:!0,get:function(){return function e(r,t){return t in r?r[t]:"then"in r&&"function"==typeof r.then?r.then(r=>e(r,t)):"function"==typeof r&&"default"===t?r:void 0}}})},3644:(e,r,t)=>{t.r(r),t.d(r,{config:()=>E,default:()=>p,routeModule:()=>w});var a={};t.r(a),t.d(a,{default:()=>h});var o=t(1802),n=t(7153),s=t(6249),i=t(1649),c=t(3524),d=t(9403);let u=process.env.DATABASE_URL,l=global.prisma||new c.PrismaClient({datasources:{db:{url:u}},log:[{emit:"event",level:"query"},{emit:"stdout",level:"error"},{emit:"stdout",level:"info"},{emit:"stdout",level:"warn"}]});l.$on("query",e=>{d.Z.debug("Prisma Query",{query:e.query,params:e.params,duration:`${e.duration}ms`})}),l.$use(async(e,r)=>{let t=Date.now();try{return await r(e)}catch(r){throw d.Z.error("Prisma Error",{model:e.model,action:e.action,error:r instanceof Error?r.message:String(r)}),r}finally{let r=Date.now();d.Z.debug("Prisma Query Time",{model:e.model,action:e.action,duration:`${r-t}ms`})}});var m=t(6940),g=t(4925),f=t(4407);async function h(e,r){if("phase-production-build"===process.env.NEXT_PHASE)return d.Z.info("Static export detected, skipping API route"),r.status(200).json({success:!0,data:{message:"API routes are not available during static export",path:e.url}});if("GET"!==e.method)return d.Z.warn("許可されていないメソッド:",{method:e.method}),r.status(405).json({success:!1,error:{code:"METHOD_NOT_ALLOWED",message:"許可されていないメソッドです"}});if(!await (0,i.getSession)({req:e}))return d.Z.warn("認証が必要です"),r.status(401).json({success:!1,error:{code:"UNAUTHORIZED",message:"認証が必要です"}});let{id:t}=e.query;if(!t||"string"!=typeof t)return d.Z.warn("注文IDが必要です"),r.status(400).json({success:!1,error:{code:"ORDER_ID_REQUIRED",message:"注文IDが必要です"}});try{let e;try{await l.$connect()}catch(e){return d.Z.error("データベース接続エラー:",{error:e.message}),r.status(500).json({success:!1,error:{code:"DATABASE_CONNECTION_ERROR",message:"データベースに接続できません",details:e.message}})}let a=await l.order.findUnique({where:{id:t},include:{trackingInfo:!0}});if(!a)return d.Z.warn("注文が見つかりません",{orderId:t}),r.status(404).json({success:!1,error:{code:"ORDER_NOT_FOUND",message:"注文が見つかりません",details:{orderId:t}}});if(!a.trackingInfo?.trackingNumber||!a.trackingInfo?.carrier)return d.Z.warn("追跡番号が見つかりません",{orderId:t}),r.status(404).json({success:!1,error:{code:"TRACKING_NOT_FOUND",message:"追跡番号が見つかりません",details:{orderId:t}}});try{switch(a.trackingInfo.carrier.toLowerCase()){case"yamato":let r=new m.A(process.env.YAMATO_API_KEY||"");e=await r.getTrackingInfo(a.trackingInfo.trackingNumber);break;case"sagawa":let t=new g.i(process.env.SAGAWA_API_KEY||"");e=await t.getTrackingInfo(a.trackingInfo.trackingNumber);break;case"fedex":let o=new f.m(process.env.FEDEX_API_KEY||"");e=await o.getTrackingInfo(a.trackingInfo.trackingNumber);break;default:throw Error(`対応していない配送業者です: ${a.trackingInfo.carrier}`)}}catch(e){return d.Z.error("配送業者APIエラー:",{error:e.message}),r.status(500).json({success:!1,error:{code:"CARRIER_API_ERROR",message:"配送情報の取得に失敗しました",details:e.message}})}try{await l.trackingInfo.update({where:{orderId:a.id},data:{status:e.status,currentLocation:e.currentLocation,estimatedDeliveryDate:e.estimatedDelivery,updatedAt:new Date}})}catch(e){return d.Z.error("データベース更新エラー:",{error:e.message}),r.status(500).json({success:!1,error:{code:"DATABASE_UPDATE_ERROR",message:"配送情報の更新に失敗しました",details:e.message}})}return r.status(200).json({success:!0,data:e})}catch(e){return d.Z.error("予期せぬエラーが発生しました",{error:e.message}),r.status(500).json({success:!1,error:{code:"INTERNAL_SERVER_ERROR",message:"サーバー内部エラーが発生しました",details:e.message}})}}let p=(0,s.l)(a,"default"),E=(0,s.l)(a,"config"),w=new o.PagesAPIRouteModule({definition:{kind:n.x.PAGES_API,page:"/api/orders/[id]/tracking",pathname:"/api/orders/[id]/tracking",bundlePath:"",filename:""},userland:a})},9403:(e,r,t)=>{t.d(r,{Z:()=>n});let a=require("winston");var o=t.n(a);let n=o().createLogger({level:process.env.LOG_LEVEL||"info",format:o().format.combine(o().format.timestamp(),o().format.json()),transports:[new(o()).transports.Console({format:o().format.combine(o().format.colorize(),o().format.simple())})]})},4407:(e,r,t)=>{t.d(r,{m:()=>o});var a=t(9403);class o{constructor(e,r="https://api.fedex.com/v1"){this.apiKey=e,this.baseUrl=r}async getTrackingInfo(e){try{let r;if(a.Z.info(`FedExの配送情報を取得中: ${e}`),!/^\d{12,14}$/.test(e))throw Error("無効なFedEx追跡番号フォーマットです");let t=["集荷完了","通関手続き中","国際輸送中","配送中","配達完了","保管中"],o=["メンフィス国際ハブ","成田国際空港","羽田空港","関西国際空港","中部国際空港","福岡国際空港"],n=new Date,s=t[Math.floor(Math.random()*t.length)],i=o[Math.floor(Math.random()*o.length)];if("配達完了"===s){let e=new Date;e.setHours(e.getHours()-Math.floor(8*Math.random())),r=e.toISOString()}else{let e=new Date;e.setDate(e.getDate()+Math.floor(5*Math.random())+1),r=e.toISOString()}return{trackingNumber:e,status:s,currentLocation:i,description:`荷物は${i}にあります。${s}です。`,timestamp:n.toISOString(),estimatedDelivery:r,carrier:"fedex",additionalInfo:{deliveryTimeWindow:"12:00-17:00",packageSize:"国際小包",deliveryType:"FedEx International Priority",senderName:"FedEx Corporation"}}}catch(e){throw a.Z.error(`FedExの配送情報取得エラー: ${e instanceof Error?e.message:"不明なエラー"}`),Error(`FedExの配送情報の取得に失敗しました: ${e instanceof Error?e.message:"不明なエラー"}`)}}}},4925:(e,r,t)=>{t.d(r,{i:()=>o});var a=t(9403);class o{constructor(e,r="https://api.sagawa.co.jp/v1"){this.apiKey=e,this.baseUrl=r}async getTrackingInfo(e){try{a.Z.info(`Requesting tracking info for Sagawa tracking number: ${e}`);let r=["配送中","配達完了","集荷完了","配送遅延"],t=["東京都中央区","大阪府大阪市","愛知県名古屋市","福岡県福岡市"],o=r[Math.floor(Math.random()*r.length)],n=t[Math.floor(Math.random()*t.length)],s=new Date,i=new Date(s.getTime()+6048e5*Math.random());return{trackingNumber:e,status:o,currentLocation:n,description:`荷物は${n}にあります。${o}です。`,timestamp:s.toISOString(),estimatedDelivery:i.toISOString(),carrier:"sagawa",additionalInfo:{weight:`${Math.floor(10*Math.random())+1}kg`,deliveryType:"通常配送",senderName:"佐川運輸株式会社"}}}catch(e){throw a.Z.error("Error fetching Sagawa tracking info:",e),Error("佐川の配送情報の取得に失敗しました")}}}},6940:(e,r,t)=>{t.d(r,{A:()=>o});var a=t(9403);class o{constructor(e,r="https://api.yamato.co.jp/v1"){this.apiKey=e,this.baseUrl=r}async getTrackingInfo(e){try{a.Z.info(`Requesting tracking info for Yamato tracking number: ${e}`);let r=["配送中","配達完了","集荷完了","配送遅延"],t=["東京都中央区","大阪府大阪市","愛知県名古屋市","福岡県福岡市"],o=r[Math.floor(Math.random()*r.length)],n=t[Math.floor(Math.random()*t.length)],s=new Date,i=new Date(s.getTime()+6048e5*Math.random());return{trackingNumber:e,status:o,currentLocation:n,description:`荷物は${n}にあります。${o}です。`,timestamp:s.toISOString(),estimatedDelivery:i.toISOString(),carrier:"yamato",additionalInfo:{deliveryTimeWindow:"14:00-16:00",packageSize:"60サイズ",weight:`${Math.floor(10*Math.random())+1}kg`,deliveryType:"通常配送"}}}catch(e){throw a.Z.error("Error fetching Yamato tracking info:",e),Error("ヤマトの配送情報の取得に失敗しました")}}}},7153:(e,r)=>{var t;Object.defineProperty(r,"x",{enumerable:!0,get:function(){return t}}),function(e){e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE"}(t||(t={}))},1802:(e,r,t)=>{e.exports=t(145)}};var r=require("../../../../webpack-api-runtime.js");r.C(e);var t=r(r.s=3644);module.exports=t})();